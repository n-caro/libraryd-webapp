// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PSoft.Libraryd.AcessData;

namespace PSoft.Libraryd.AcessData.Migrations
{
    [DbContext(typeof(LibrarydDbContext))]
    [Migration("20201103180959_libraryd-db-v3")]
    partial class libraryddbv3
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PSoft.Libraryd.Domain.Entities.Alquiler", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClienteId")
                        .HasColumnName("Cliente")
                        .HasColumnType("int");

                    b.Property<int>("EstadoId")
                        .HasColumnName("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaAlquiler")
                        .HasColumnType("Date");

                    b.Property<DateTime?>("FechaDevolucion")
                        .HasColumnType("Date");

                    b.Property<DateTime?>("FechaReserva")
                        .HasColumnType("Date");

                    b.Property<string>("ISBN")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("EstadoId");

                    b.HasIndex("ISBN");

                    b.ToTable("Alquileres");
                });

            modelBuilder.Entity("PSoft.Libraryd.Domain.Entities.Cliente", b =>
                {
                    b.Property<int>("ClienteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(45)")
                        .HasMaxLength(45);

                    b.Property<string>("DNI")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(45)")
                        .HasMaxLength(45);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(45)")
                        .HasMaxLength(45);

                    b.HasKey("ClienteId");

                    b.HasAlternateKey("DNI", "Email");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("PSoft.Libraryd.Domain.Entities.EstadoDeAlquiler", b =>
                {
                    b.Property<int>("EstadoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(45)")
                        .HasMaxLength(45);

                    b.HasKey("EstadoId");

                    b.ToTable("EstadoDeAlquileres");

                    b.HasData(
                        new
                        {
                            EstadoId = 1,
                            Descripcion = "Reservado"
                        },
                        new
                        {
                            EstadoId = 2,
                            Descripcion = "Alquilado"
                        },
                        new
                        {
                            EstadoId = 3,
                            Descripcion = "Cancelado"
                        });
                });

            modelBuilder.Entity("PSoft.Libraryd.Domain.Entities.Libro", b =>
                {
                    b.Property<string>("ISBN")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Autor")
                        .IsRequired()
                        .HasColumnType("nvarchar(45)")
                        .HasMaxLength(45);

                    b.Property<string>("Edicion")
                        .IsRequired()
                        .HasColumnType("nvarchar(45)")
                        .HasMaxLength(45);

                    b.Property<string>("Editorial")
                        .IsRequired()
                        .HasColumnType("nvarchar(45)")
                        .HasMaxLength(45);

                    b.Property<string>("Imagen")
                        .IsRequired()
                        .HasColumnType("nvarchar(45)")
                        .HasMaxLength(45);

                    b.Property<int?>("Stock")
                        .HasColumnType("int")
                        .HasMaxLength(45);

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(45)")
                        .HasMaxLength(45);

                    b.HasKey("ISBN");

                    b.ToTable("Libros");

                    b.HasData(
                        new
                        {
                            ISBN = "9783642191756",
                            Autor = "Ian Gorton",
                            Edicion = "Second Edition",
                            Editorial = "Springer",
                            Imagen = "https://i.imgur.com/wVXlZzF.jpg",
                            Stock = 5,
                            Titulo = "Essential Software Architecture"
                        },
                        new
                        {
                            ISBN = "9786073206037",
                            Autor = "Ian Sommerville",
                            Edicion = "Novena Edicion",
                            Editorial = "Addison-Wesley",
                            Imagen = "https://i.imgur.com/XwTsnyv.jpg",
                            Stock = 4,
                            Titulo = "Ingenieria de Software"
                        },
                        new
                        {
                            ISBN = "9780136073734",
                            Autor = "William Stallings",
                            Edicion = "Septima Edicion",
                            Editorial = "Pearsons",
                            Imagen = "https://i.imgur.com/eFiruFW.jpg",
                            Stock = 8,
                            Titulo = "Organización y Arquitectura de Computadores"
                        },
                        new
                        {
                            ISBN = "9788497644907",
                            Autor = "Homero",
                            Edicion = "2005",
                            Editorial = "Edimat Libros",
                            Imagen = "https://i.imgur.com/PsK9lpi.jpg",
                            Stock = 10,
                            Titulo = "La iliada"
                        },
                        new
                        {
                            ISBN = "9780132350884",
                            Autor = "Robert C. Martin",
                            Edicion = "1 ed.",
                            Editorial = "Prentice Hall",
                            Imagen = "https://i.imgur.com/XyEK93p.jpg",
                            Stock = 1,
                            Titulo = "Clean Code"
                        },
                        new
                        {
                            ISBN = "9788445000663",
                            Autor = "J. R. R. Tolkien",
                            Edicion = "1",
                            Editorial = "Booket",
                            Imagen = "https://i.imgur.com/FMxBdpD.jpg",
                            Stock = 0,
                            Titulo = "El Señor de los Anillos I"
                        },
                        new
                        {
                            ISBN = "9786070712739",
                            Autor = "J. R. R. Tolkien",
                            Edicion = "2012",
                            Editorial = "Booket",
                            Imagen = "https://i.imgur.com/0813LgS.jpg",
                            Stock = 2,
                            Titulo = "El Señor de los Anillos II"
                        },
                        new
                        {
                            ISBN = "9786070712746",
                            Autor = "J. R. R. Tolkien",
                            Edicion = "Reprint edición",
                            Editorial = "Planeta",
                            Imagen = "https://i.imgur.com/Bxs4Ia5.jpg",
                            Stock = 3,
                            Titulo = "El Señor de los Anillos III"
                        },
                        new
                        {
                            ISBN = "9788497598637",
                            Autor = "Eduard Estivill",
                            Edicion = "2003",
                            Editorial = "DEBOLSILLO",
                            Imagen = "https://i.imgur.com/7EWiKz2.jpg",
                            Stock = 15,
                            Titulo = "NECESITO DORMIR!"
                        },
                        new
                        {
                            ISBN = "9780525566267",
                            Autor = "Stephen King",
                            Edicion = "Edición Media tie-in",
                            Editorial = "Vintage Espanol",
                            Imagen = "https://i.imgur.com/Sq51uG6.jpg",
                            Stock = 6,
                            Titulo = "It (Eso)"
                        },
                        new
                        {
                            ISBN = "9780764508141",
                            Autor = "Davis, Stephen R",
                            Edicion = "2001",
                            Editorial = "Hungry Minds Inc",
                            Imagen = "https://i.imgur.com/6BKObap.jpg",
                            Stock = 2,
                            Titulo = "C# for Dummies"
                        });
                });

            modelBuilder.Entity("PSoft.Libraryd.Domain.Entities.Alquiler", b =>
                {
                    b.HasOne("PSoft.Libraryd.Domain.Entities.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PSoft.Libraryd.Domain.Entities.EstadoDeAlquiler", "EstadoDeAlquiler")
                        .WithMany()
                        .HasForeignKey("EstadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PSoft.Libraryd.Domain.Entities.Libro", "Libro")
                        .WithMany()
                        .HasForeignKey("ISBN")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
